// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var CssJs = require("bs-css-emotion/src/CssJs.bs.js");

function ofString(value) {
  if (value.TAG === /* Max */0) {
    return "(max-width: " + String(value._0) + "px )";
  } else {
    return "(min-width: " + String(value._0) + "px )";
  }
}

function mediaQuery(kind, rules) {
  return CssJs.media(ofString(kind), rules);
}

function maxWidth(value) {
  var partial_arg = {
    TAG: /* Max */0,
    _0: value
  };
  return function (param) {
    return CssJs.media(ofString(partial_arg), param);
  };
}

function minWidth(value) {
  var partial_arg = {
    TAG: /* Min */1,
    _0: value
  };
  return function (param) {
    return CssJs.media(ofString(partial_arg), param);
  };
}

var partial_arg = {
  TAG: /* Max */0,
  _0: 576
};

function xs(param) {
  return CssJs.media(ofString(partial_arg), param);
}

var partial_arg$1 = {
  TAG: /* Min */1,
  _0: 576
};

function sm(param) {
  return CssJs.media(ofString(partial_arg$1), param);
}

var partial_arg$2 = {
  TAG: /* Min */1,
  _0: 768
};

function md(param) {
  return CssJs.media(ofString(partial_arg$2), param);
}

var partial_arg$3 = {
  TAG: /* Min */1,
  _0: 992
};

function lg(param) {
  return CssJs.media(ofString(partial_arg$3), param);
}

var partial_arg$4 = {
  TAG: /* Min */1,
  _0: 1200
};

function xl(param) {
  return CssJs.media(ofString(partial_arg$4), param);
}

var partial_arg$5 = {
  TAG: /* Min */1,
  _0: 1600
};

function xxl(param) {
  return CssJs.media(ofString(partial_arg$5), param);
}

exports.ofString = ofString;
exports.mediaQuery = mediaQuery;
exports.maxWidth = maxWidth;
exports.minWidth = minWidth;
exports.xs = xs;
exports.sm = sm;
exports.md = md;
exports.lg = lg;
exports.xl = xl;
exports.xxl = xxl;
/* CssJs Not a pure module */
