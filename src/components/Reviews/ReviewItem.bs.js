// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Text = require("../Text/Text.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Motion = require("../../bindings/FramerMotion/Motion.bs.js");
var Render = require("../../lib/Render.bs.js");
var $$Image = require("next/image").default;
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Review_Styles = require("./Review_Styles.bs.js");

function variants(delay) {
  return {
          hidden: {
            opacity: 0.0,
            y: 20
          },
          visible: {
            opacity: 1.0,
            y: 0,
            transition: {
              duration: 0.6,
              delay: delay
            }
          }
        };
}

function ReviewItem(Props) {
  var controls = Props.controls;
  var id = Props.id;
  var photo = Props.photo;
  var name = Props.name;
  var role = Props.role;
  var description = Props.description;
  var translatedDescription = Props.translatedDescription;
  var isStudentReviewOpt = Props.isStudentReview;
  var isStudentReview = isStudentReviewOpt !== undefined ? isStudentReviewOpt : false;
  var match = React.useState(function () {
        return false;
      });
  var setShowTranslation = match[1];
  var showTranslation = match[0];
  var toggleTranslation = function (param) {
    return Curry._1(setShowTranslation, (function (param) {
                  return !showTranslation;
                }));
  };
  var index = id;
  return React.createElement(Motion.Div.make, {
              className: Review_Styles.review(isStudentReview),
              initial: "hidden",
              variants: variants(index * 0.6),
              animate: {
                NAME: "controlled",
                VAL: controls
              },
              children: null
            }, React.createElement("div", {
                  className: Review_Styles.header
                }, React.createElement(Motion.Div.make, {
                      className: Review_Styles._photo,
                      initial: "hidden",
                      variants: variants(index * 0.4),
                      animate: {
                        NAME: "controlled",
                        VAL: controls
                      },
                      children: React.createElement($$Image, {
                            src: photo,
                            width: "72",
                            height: "72",
                            alt: name
                          })
                    }), React.createElement("div", undefined, React.createElement(Motion.H2.make, {
                          className: Review_Styles._name,
                          initial: "hidden",
                          variants: variants(index * 0.5),
                          animate: {
                            NAME: "controlled",
                            VAL: controls
                          },
                          children: name
                        }), React.createElement(Motion.P.make, {
                          className: Review_Styles._role,
                          initial: "hidden",
                          variants: variants(index * 0.6),
                          animate: {
                            NAME: "controlled",
                            VAL: controls
                          },
                          children: Render.str(role)
                        }))), translatedDescription !== undefined ? React.createElement($$Text.P.make, {
                    children: showTranslation ? Caml_option.valFromOption(translatedDescription) : description,
                    className: Review_Styles._description(isStudentReview),
                    animate: {
                      NAME: "controlled",
                      VAL: controls
                    },
                    initial: "hidden",
                    variants: variants(index * 0.7)
                  }) : React.createElement($$Text.P.make, {
                    children: description,
                    className: Review_Styles._description(isStudentReview),
                    animate: {
                      NAME: "controlled",
                      VAL: controls
                    },
                    initial: "hidden",
                    variants: variants(index * 0.7)
                  }), translatedDescription !== undefined ? React.createElement("button", {
                    className: Review_Styles.translateButton,
                    onClick: toggleTranslation
                  }, showTranslation ? Render.str("Ver original") : Render.str("Ver tradução")) : null);
}

var make = ReviewItem;

exports.variants = variants;
exports.make = make;
/* Text Not a pure module */
