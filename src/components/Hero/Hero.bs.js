// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Hooks = require("../../lib/Hooks.bs.js");
var React = require("react");
var Motion = require("../../bindings/FramerMotion/Motion.bs.js");
var Animated = require("./Animated");
var Hero_Styles = require("./Hero_Styles.bs.js");
var Hero_Content = require("./Hero_Content.bs.js");
var FramerMotion = require("framer-motion");

var make = Animated.Symbol;

var $$Symbol = {
  make: make
};

function variants(delay) {
  return {
          hidden: {
            opacity: 0.0,
            y: 20
          },
          visible: {
            opacity: 1.0,
            y: 0,
            transition: {
              duration: 0.6,
              delay: delay
            }
          }
        };
}

function Hero(Props) {
  var controls = FramerMotion.useAnimation();
  Hooks.useMount(function (param) {
        return controls.start("visible");
      });
  return React.createElement("section", {
              className: Hero_Styles.wrapper
            }, React.createElement("div", {
                  className: Hero_Styles.symbolWrapper
                }, React.createElement(make, {})), React.createElement(Motion.H1.make, {
                  className: Hero_Styles.text,
                  initial: "hidden",
                  variants: variants(1.75),
                  animate: {
                    NAME: "controlled",
                    VAL: controls
                  },
                  children: Hero_Content.heroText
                }), React.createElement(Motion.A.make, {
                  className: Hero_Styles.button,
                  initial: "hidden",
                  variants: variants(2.0),
                  animate: {
                    NAME: "controlled",
                    VAL: controls
                  },
                  href: "#o-que-e-rescript",
                  children: "SAIBA MAIS"
                }));
}

var Content;

var make$1 = Hero;

exports.Content = Content;
exports.$$Symbol = $$Symbol;
exports.variants = variants;
exports.make = make$1;
/* make Not a pure module */
